{
    "swagger": "2.0",
    "info": {
        "title": "EmployeesService",
        "x-vb": {
            "headers": {
                "REST-Framework-Version": "2"
            },
            "dt-serviceAuthentication": {
                "type": "none"
            },
            "dt-wizardType": "specification",
            "dt-endpointProvider": "adf_describe",
            "dt-sourceURL": "http://localhost:7001/adfrest/rest/1/Employees/describe"
        },
        "version": "1.0.0"
    },
    "schemes": [
        "http"
    ],
    "host": "localhost:7001",
    "basePath": "/adfrest/rest/1",
    "tags": [
        {
            "name": "Employees ",
            "description": "Employees",
            "x-vb": {
                "resource": true
            }
        },
        {
            "name": "Employees",
            "x-vb": {
                "resource": true,
                "parentResource": "Employees "
            }
        }
    ],
    "definitions": {
        "link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string",
                    "title": "hyperlink reference",
                    "description": "The URI to the related resource."
                },
                "rel": {
                    "type": "string",
                    "title": "relation",
                    "description": "The name of the relation to the resource instance.  Example: self.",
                    "enum": [
                        "self",
                        "lov",
                        "parent",
                        "canonical",
                        "child",
                        "enclosure",
                        "action"
                    ]
                },
                "properties": {
                    "type": "object",
                    "properties": {
                        "changeIndicator": {
                            "type": "string",
                            "description": "Change indicator or the ETag value of the resource instance."
                        }
                    }
                }
            }
        },
        "Employees": {
            "type": "object",
            "required": [
                "count",
                "hasMore",
                "limit",
                "offset",
                "links"
            ],
            "properties": {
                "totalResults": {
                    "type": "integer",
                    "description": "The estimated row count when \"?totalResults=true\", otherwise the count is not included."
                },
                "count": {
                    "type": "integer",
                    "description": "The number of resource instances returned in the current range."
                },
                "hasMore": {
                    "type": "boolean",
                    "description": "Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false."
                },
                "limit": {
                    "type": "integer",
                    "description": "The actual paging size used by the server."
                },
                "offset": {
                    "type": "integer",
                    "description": "The offset value used in the current page."
                },
                "links": {
                    "type": "array",
                    "title": "Links",
                    "description": "The link relations associated with the resource instance.",
                    "items": {
                        "$ref": "#/definitions/link"
                    }
                },
                "items": {
                    "type": "array",
                    "title": "Items",
                    "description": "The items in the collection.",
                    "items": {
                        "$ref": "#/definitions/Employees-item-response"
                    }
                }
            }
        },
        "Employees-item-response": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "title": "Links",
                    "description": "The link relations associated with the resource instance.",
                    "items": {
                        "$ref": "#/definitions/link"
                    }
                },
                "EmployeeId": {
                    "type": "integer",
                    "readOnly": false,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 6
                    }
                },
                "FirstName": {
                    "type": "string",
                    "readOnly": false,
                    "maxLength": 20,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "LastName": {
                    "type": "string",
                    "readOnly": false,
                    "maxLength": 25,
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "Email": {
                    "type": "string",
                    "readOnly": false,
                    "maxLength": 25,
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "PhoneNumber": {
                    "type": "string",
                    "readOnly": false,
                    "maxLength": 20,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "HireDate": {
                    "type": "string",
                    "readOnly": false,
                    "format": "date-time",
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "Salary": {
                    "type": "number",
                    "readOnly": false,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 20,
                        "adf-scale": 2
                    }
                },
                "CommissionPct": {
                    "type": "number",
                    "readOnly": false,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 2,
                        "adf-scale": 2
                    }
                },
                "ManagerId": {
                    "type": "integer",
                    "readOnly": false,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 6
                    }
                },
                "DepartmentId": {
                    "type": "integer",
                    "readOnly": false,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 4
                    }
                },
                "ChangeIndicatorAttr": {
                    "type": "integer",
                    "readOnly": false,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true
                    }
                }
            },
            "x-links": [
                {
                    "rel": "lov",
                    "method": "get",
                    "title": "EmployeesLovView1",
                    "href": "/adfrest/rest/1/Employees/{Employees_Id}/lov/EmployeesLovView1",
                    "mediaType": "application/vnd.oracle.adf.resourcecollection+json",
                    "encType": "application/x-www-form-urlencoded",
                    "targetSchema": {
                        "$ref": "#/definitions/Employees-EmployeesLovView1"
                    },
                    "adf-attributeMap": [
                        {
                            "source": "EmployeeId",
                            "target": "ManagerId"
                        }
                    ],
                    "adf-displayAttributes": [
                        "EmployeeId",
                        "FirstName",
                        "LastName",
                        "Email",
                        "JobId"
                    ]
                },
                {
                    "rel": "self",
                    "method": "get",
                    "title": "self",
                    "href": "/adfrest/rest/1/Employees/{Employees_Id}"
                },
                {
                    "rel": "canonical",
                    "method": "get",
                    "title": "canonical",
                    "href": "/adfrest/rest/1/Employees/{Employees_Id}"
                }
            ]
        },
        "Employees-item": {
            "type": "object",
            "properties": {
                "EmployeeId": {
                    "type": "integer",
                    "readOnly": false,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 6
                    }
                },
                "FirstName": {
                    "type": "string",
                    "readOnly": false,
                    "maxLength": 20,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "LastName": {
                    "type": "string",
                    "readOnly": false,
                    "maxLength": 25,
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "Email": {
                    "type": "string",
                    "readOnly": false,
                    "maxLength": 25,
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "PhoneNumber": {
                    "type": "string",
                    "readOnly": false,
                    "maxLength": 20,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "HireDate": {
                    "type": "string",
                    "readOnly": false,
                    "format": "date-time",
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": true
                    }
                },
                "Salary": {
                    "type": "number",
                    "readOnly": false,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 20,
                        "adf-scale": 2
                    }
                },
                "CommissionPct": {
                    "type": "number",
                    "readOnly": false,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 2,
                        "adf-scale": 2
                    }
                },
                "ManagerId": {
                    "type": "integer",
                    "readOnly": false,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 6
                    }
                },
                "DepartmentId": {
                    "type": "integer",
                    "readOnly": false,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true,
                        "adf-precision": 4
                    }
                },
                "ChangeIndicatorAttr": {
                    "type": "integer",
                    "readOnly": false,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": true
                    }
                }
            },
            "x-links": [
                {
                    "rel": "lov",
                    "method": "get",
                    "title": "EmployeesLovView1",
                    "href": "/adfrest/rest/1/Employees/{Employees_Id}/lov/EmployeesLovView1",
                    "mediaType": "application/vnd.oracle.adf.resourcecollection+json",
                    "encType": "application/x-www-form-urlencoded",
                    "targetSchema": {
                        "$ref": "#/definitions/Employees-EmployeesLovView1"
                    },
                    "adf-attributeMap": [
                        {
                            "source": "EmployeeId",
                            "target": "ManagerId"
                        }
                    ],
                    "adf-displayAttributes": [
                        "EmployeeId",
                        "FirstName",
                        "LastName",
                        "Email",
                        "JobId"
                    ]
                },
                {
                    "rel": "self",
                    "method": "get",
                    "title": "self",
                    "href": "/adfrest/rest/1/Employees/{Employees_Id}"
                },
                {
                    "rel": "canonical",
                    "method": "get",
                    "title": "canonical",
                    "href": "/adfrest/rest/1/Employees/{Employees_Id}"
                }
            ]
        },
        "Employees-EmployeesLovView1": {
            "type": "object",
            "required": [
                "count",
                "hasMore",
                "limit",
                "offset",
                "links"
            ],
            "properties": {
                "totalResults": {
                    "type": "integer",
                    "description": "The estimated row count when \"?totalResults=true\", otherwise the count is not included."
                },
                "count": {
                    "type": "integer",
                    "description": "The number of resource instances returned in the current range."
                },
                "hasMore": {
                    "type": "boolean",
                    "description": "Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false."
                },
                "limit": {
                    "type": "integer",
                    "description": "The actual paging size used by the server."
                },
                "offset": {
                    "type": "integer",
                    "description": "The offset value used in the current page."
                },
                "links": {
                    "type": "array",
                    "title": "Links",
                    "description": "The link relations associated with the resource instance.",
                    "items": {
                        "$ref": "#/definitions/link"
                    }
                },
                "items": {
                    "type": "array",
                    "title": "Items",
                    "description": "The items in the collection.",
                    "items": {
                        "$ref": "#/definitions/Employees-EmployeesLovView1-item-response"
                    }
                }
            }
        },
        "Employees-EmployeesLovView1-item-response": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "title": "Links",
                    "description": "The link relations associated with the resource instance.",
                    "items": {
                        "$ref": "#/definitions/link"
                    }
                },
                "EmployeeId": {
                    "type": "integer",
                    "readOnly": true,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": false,
                        "adf-precision": 6
                    }
                },
                "FirstName": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 20,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": false
                    }
                },
                "LastName": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 25,
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": false
                    }
                },
                "Email": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 25,
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": false
                    }
                },
                "PhoneNumber": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 20,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": false
                    }
                },
                "HireDate": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": false
                    }
                },
                "JobId": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 10,
                    "x-queryable": true,
                    "x-nullable": false,
                    "x-hints": {
                        "updatable": false
                    }
                },
                "Salary": {
                    "type": "number",
                    "readOnly": true,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": false,
                        "adf-precision": 20,
                        "adf-scale": 2
                    }
                },
                "CommissionPct": {
                    "type": "number",
                    "readOnly": true,
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": false,
                        "adf-precision": 2,
                        "adf-scale": 2
                    }
                },
                "ManagerId": {
                    "type": "integer",
                    "readOnly": true,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": false,
                        "adf-precision": 6
                    }
                },
                "DepartmentId": {
                    "type": "integer",
                    "readOnly": true,
                    "format": "int32",
                    "x-queryable": true,
                    "x-nullable": true,
                    "x-hints": {
                        "updatable": false,
                        "adf-precision": 4
                    }
                }
            }
        }
    },
    "paths": {
        "/Employees": {
            "get": {
                "operationId": "getall_Employees",
                "summary": "get",
                "tags": [
                    "Employees"
                ],
                "parameters": [
                    {
                        "name": "expand",
                        "description": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "description": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "onlyData",
                        "description": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "links",
                        "description": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                        "in": "query",
                        "type": "string",
                        "x-vb-defaultValue": "self"
                    },
                    {
                        "name": "limit",
                        "description": "This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "description": "Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "totalResults",
                        "description": "The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "q",
                        "description": "This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "orderBy",
                        "description": "This parameter orders a resource collection based on the specified fields.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "finder",
                        "description": "Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey  <br>Finder Variables: <ul><li>EmployeeId  </li></ul></li></ul>",
                        "in": "query",
                        "type": "string",
                        "x-adf-finder-formats": [
                            {
                                "name": "PrimaryKey",
                                "properties": {
                                    "EmployeeId": {
                                        "type": "integer",
                                        "format": "int32",
                                        "readOnly": false,
                                        "x-queryable": true,
                                        "x-nullable": false,
                                        "x-hints": {
                                            "updatable": true,
                                            "adf-precision": 6
                                        }
                                    }
                                }
                            }
                        ]
                    }
                ],
                "produces": [
                    "application/vnd.oracle.adf.resourcecollection+json",
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "The following table describes the default response for this task.",
                        "schema": {
                            "$ref": "#/definitions/Employees"
                        }
                    }
                },
                "x-vb-actionHint": "retrieveMany"
            },
            "post": {
                "operationId": "create_Employees",
                "summary": "create or upsert",
                "tags": [
                    "Employees"
                ],
                "consumes": [
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "parameters": [
                    {
                        "name": "Upsert-Mode",
                        "description": "When set to true, the server will perform an Upsert operation instead of a Create. In an Upsert operation the server attempts to find an existing resource that matches the payload. If found, the server updates the existing resource instead of creating a new one. If not found, or when set to false (the default), a Create is performed.",
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "description": "The following table describes the body parameters in the request for this task.",
                        "schema": {
                            "$ref": "#/definitions/Employees-item"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "The following table describes the default response for this task.",
                        "schema": {
                            "$ref": "#/definitions/Employees-item-response"
                        }
                    }
                },
                "x-vb-actionHint": "create"
            }
        },
        "/Employees/{Employees_Id}": {
            "get": {
                "operationId": "get_Employees",
                "summary": "get",
                "tags": [
                    "Employees"
                ],
                "parameters": [
                    {
                        "name": "Employees_Id",
                        "description": "The value of this parameter could be a hash of the key that is used to uniquely identify the resource item. The client should not generate the hash key value.  Instead, the client should query on the collection resource with a filter to navigate to a specific resource item. For example: products?q=InventoryItemId=<value1>",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "expand",
                        "description": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "description": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "onlyData",
                        "description": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "dependency",
                        "description": "This parameter specifies dependencies which are fields that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The fields specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the fields will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency fields.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "links",
                        "description": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                        "in": "query",
                        "type": "string",
                        "x-vb-defaultValue": "self"
                    }
                ],
                "produces": [
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "The following table describes the default response for this task.",
                        "schema": {
                            "$ref": "#/definitions/Employees-item-response"
                        }
                    }
                },
                "x-vb-actionHint": "retrieveOne"
            },
            "patch": {
                "operationId": "update_Employees",
                "summary": "update",
                "tags": [
                    "Employees"
                ],
                "consumes": [
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "parameters": [
                    {
                        "name": "Employees_Id",
                        "description": "The value of this parameter could be a hash of the key that is used to uniquely identify the resource item. The client should not generate the hash key value.  Instead, the client should query on the collection resource with a filter to navigate to a specific resource item. For example: products?q=InventoryItemId=<value1>",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "description": "The following table describes the body parameters in the request for this task.",
                        "schema": {
                            "$ref": "#/definitions/Employees-item"
                        },
                        "name": "body",
                        "in": "body"
                    }
                ],
                "produces": [
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "The following table describes the default response for this task.",
                        "schema": {
                            "$ref": "#/definitions/Employees-item-response"
                        }
                    }
                },
                "x-vb-actionHint": "update"
            },
            "delete": {
                "operationId": "delete_Employees",
                "summary": "delete",
                "tags": [
                    "Employees"
                ],
                "parameters": [
                    {
                        "name": "Employees_Id",
                        "description": "The value of this parameter could be a hash of the key that is used to uniquely identify the resource item. The client should not generate the hash key value.  Instead, the client should query on the collection resource with a filter to navigate to a specific resource item. For example: products?q=InventoryItemId=<value1>",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No Content. This task does not return elements in the response body."
                    }
                },
                "x-vb-actionHint": "delete"
            }
        },
        "/Employees/{Employees_Id}/lov/EmployeesLovView1": {
            "get": {
                "operationId": "getall_Employees-EmployeesLovView1",
                "tags": [
                    "Employees"
                ],
                "parameters": [
                    {
                        "name": "expand",
                        "description": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "description": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in": "query",
                        "type": "string",
                        "x-vb-defaultValue": "EmployeeId,FirstName,LastName,Email,JobId"
                    },
                    {
                        "name": "onlyData",
                        "description": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in": "query",
                        "type": "boolean",
                        "x-vb-defaultValue": "true"
                    },
                    {
                        "name": "dependency",
                        "description": "This parameter specifies dependencies which are fields that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The fields specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the fields will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency fields.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "links",
                        "description": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "description": "This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "description": "Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "totalResults",
                        "description": "The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in": "query",
                        "type": "boolean"
                    },
                    {
                        "name": "q",
                        "description": "This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "orderBy",
                        "description": "This parameter orders a resource collection based on the specified fields.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "finder",
                        "description": "Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br>",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "Employees_Id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "default": {
                        "schema": {
                            "$ref": "#/definitions/Employees-EmployeesLovView1"
                        },
                        "description": "The content returned by the server."
                    }
                },
                "x-vb-actionHint": "retrieveMany"
            }
        }
    }
}